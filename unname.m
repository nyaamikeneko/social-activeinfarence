%% 能動的推論モデルの構築と使用に関するステップバイステップの導入

% 論文「能動的推論モデリングとその実証データへの応用に関するステップバイステップチュートリアル」の補足コード

% 著者: Ryan Smith, Karl J. Friston, Christopher J. Whyte
% 更新日: 2024/8/28 (忘却率の実装を変更)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% まず、SPM12、SPM12のDEMツールボックス、および
% このサンプルスクリプトが入っているフォルダをMatlabのパスに追加する必要があります。

clear all
close all      % これらのコマンドはワークスペースをクリアし、すべての図を閉じます

rng('shuffle') % これは乱数生成器を設定し、毎回異なる乱数列を生成します。
               % これにより、シミュレーション結果を繰り返した際にばらつきが生じます。
               % (毎回同じ乱数列を生成するには 'default' に設定することもできます)

Sim = 2;


%% 1. モデル構造のセットアップ

% 試行内の時間点または「エポック」の数: T
% =========================================================================

% ここでは、3つの時間点（T）を指定します。エージェントは 1) 「開始」状態から始まり、
% 2) 「ヒント」状態または「左を選択」か「右を選択」のスロットマシン状態に移動し、
% 3) 「ヒント」状態から選択状態の一つに移動するか、選択状態の一つから
% 「開始」状態に戻ります。

T = 10;

% 初期状態に関する事前確率: D と d
% =========================================================================

%--------------------------------------------------------------------------
% 生成過程（D）における初期状態に関する事前確率を指定します
% 注：デフォルトでは、これらは生成モデルの事前確率にもなります
%--------------------------------------------------------------------------

% 「コンテキスト」状態因子について、どこがあたりやすそうか

D{1} = [o.25 0.25 0.25 0.25]';


% 状態-結果のマッピングと信念: A と a
% =========================================================================

%--------------------------------------------------------------------------
% 生成過程（A）における各状態から得られる結果の確率を指定します
% これには、結果のモダリティごとに1つの行列が含まれます
% 注：デフォルトでは、これらは生成モデルの信念にもなります
%--------------------------------------------------------------------------

% まず、状態から観測されるヒントへのマッピングを指定します（結果モダリティ1）。
% ここで、行は観測、列は最初の状態因子（コンテキスト）、
% 3次元目は行動に対応します。各列は合計が1になる確率分布です。

% まず、すべての行動状態において、両方のコンテキストが「ヒントなし」の
% 観測を生成するように指定します：
A{1} =   [1 0 0 0;
          0 1 0 0;
          0 0 1 0;
          0 0 0 1];

A{2} =   [1 0 0 0;
          0 1 0 0;
          0 0 1 0;
          0 0 0 1];


%--------------------------------------------------------------------------
% 次に、各行動（「制御状態」とも呼ばれる）下での隠れ状態間の
% 確率的遷移を指定する必要があります。
% 注：デフォルトでは、これらは生成モデルの遷移信念にもなります
%--------------------------------------------------------------------------

% 列は時間tの状態。行は時間t+1の状態。

% 他のどの状態からでも開始状態に移動
B{1}=   [1 0 0 0;
               1 0 0 0;
               1 0 0 0;
               1 0 0 0];

B{2} =   [0 1 0 0;
               0 1 0 0;
               0 1 0 0;
               0 1 0 0];

B{3} =   [0 0 1 0;
               0 0 1 0;
               0 0 1 0;
               0 0 1 0];

B{4} =   [0 0 0 1;
               0 0 0 1;
               0 0 0 1;
               0 0 0 1];

% 選好される結果: C と c
%==========================================================================

%--------------------------------------------------------------------------
% 次に、「事前選好」を、ここでは対数確率としてエンコードして
% 指定する必要があります。
%--------------------------------------------------------------------------

% 結果のモダリティごとに1つの行列。各行は観測、各列は時間点です。
% 負の値は選好が低いことを示し、正の値は選好が高いことを示します。
% 強い選好は、リスクのある選択を促進し、情報探索を減少させます。

% まず、すべての結果に対して選好を0に設定することから始めます：

C{1} =    [0  0  0  0];


%% 2. MDP構造の定義
%==========================================================================
%==========================================================================

%--------------------------------------------------------------------------
% スクリプトを使用して、すべての行列の次元が正しいかチェックします：
%--------------------------------------------------------------------------

s{0]=0

pai[0]=[0.25 0.25 0.25 0.25]

for i in 4;
  s[i][t] = ln o1 + ln B{i}*s[t-1]
return

s[t]= s[1]pai[t][1] + s{2}pai[t][2] + s{3}pai[t][3] + s{4}pai[t][4]

c[t] = sigma(cat o1+o2 )

for i in 4;
  g[i][t] = B[i]*s[t+1] (ln (B[i]*s[t+1]) - ln (C[t]) )
return

g[t]= [g[1][t], g{2}[t], g{3}[3] , g{4}[4] ]
pai[t]=argmin(g[t])















% 再びシミュレートされた神経応答を可視化できます

%spm_figure('GetWin','Figure 3'); clf   % 行動を表示
%spm_MDP_VB_game_tutorial(MDP);
% 1. 図のハンドルを取得
F = spm_figure('GetWin','Figure 3');
clf;

% 2. 図を描画
spm_MDP_VB_game_tutorial(MDP);

% 3. 高解像度画像としてファイルに保存 ✨
%    -dpng : ファイル形式をPNGに指定
%    -r300 : 解像度を300 DPIに指定（数値を大きくするとより高精細に）
%    'MyHighResFigure.png' : 保存するファイル名（自由に変更可能）
print(F, '-dpng', '-r300', 'MyHighResFigure.png');


